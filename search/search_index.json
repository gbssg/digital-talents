{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Digital Talents \u00b6 Modulbeschreibungen zur Ausbildung Digital Talents","title":"0. \u00dcbersicht"},{"location":"#digital-talents","text":"Modulbeschreibungen zur Ausbildung Digital Talents","title":"Digital Talents"},{"location":"1-10/","text":"Versionsverwaltung \u00b6 Kompetenzen \u00b6 Versteht den Nutzen einer Versionsverwaltung und kann diese praktisch anwenden. Analysiert unterschiedliche Vorgehensweisen (Workflow), kann Vor- und Nachteile ableiten und entscheidet sich f\u00fcr die der Situation besten Variante. Handlungsziele \u00b6 1. W\u00e4hlt eine Versionsverwaltung situationsbezogen aus. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt den Sinn und Nutzen einer Versionsverwaltung. Kann unterschiedliche Versionsverwaltungssysteme unterscheiden und zuordnen. 2. Wendet eine konkrete Versionsverwaltung professionell an. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Installiert eine Versionsverwaltung und konfiguriert diese entsprechend den Vorgaben. Kann die Versionsverwaltung situationsbezogen praktisch anwenden. Kann Vor- und Nachteile der Arbeitsweise beschreiben. 3. Setzt eine sinnvolle Vorgehensweise (Workflow) ein. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt unterschiedliche Vorgehensweisen (Workflows) und kann diese aufzeigen. Kann eine konkrete Vorgehensweisen in Bezug zu der aktuellen Situation ausw\u00e4hlen und den Entscheid begr\u00fcnden. Kann die Konfiguration der Vorgehensweise vornehmen und andere Personen darin schulen. Grobplanung Grobplanung \u00b6 Einf\u00fchrung Versionsverwaltung (2 Lektionen) \u00b6 Aufgaben einer Versionsverwaltung, welche Probleme l\u00f6st eine Versionsverwaltung lokale, zentrale und dezentrale Versionsverwaltung (inkl. Beispiele) Git-Prinzip verstehen (Staging, Branching, etc.) Git installieren, konfigurieren und praktisch einsetzen (6 Lektionen) \u00b6 Git lokal installieren und konfigurieren Basismanipulationen lokal vornehmen Zusammenarbeit \u00fcber Github oder Gitlab Pull Requests und weiterf\u00fchrende Manipulationen Reflexion \u00fcber Arbeitsweise mit Git Git Workflow (4 Lektionen) \u00b6 Unterschiedliche Arbeitsweisen (Workflows) kennenlernen Vor- und Nachteile Workflow erarbeiten, optimale Einsatzszenarien finden Konkretes Aufsetzen Git Workflow und Beispiele praktisch bearbeiten Einfaches Howto direkt \u00fcber Git schreiben (Markdown)","title":"Versionsverwaltung"},{"location":"1-10/#versionsverwaltung","text":"","title":"Versionsverwaltung"},{"location":"1-10/#kompetenzen","text":"Versteht den Nutzen einer Versionsverwaltung und kann diese praktisch anwenden. Analysiert unterschiedliche Vorgehensweisen (Workflow), kann Vor- und Nachteile ableiten und entscheidet sich f\u00fcr die der Situation besten Variante.","title":"Kompetenzen"},{"location":"1-10/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-10/#grobplanung","text":"","title":"Grobplanung"},{"location":"1-20/","text":"Linux Grundlagen / Shell \u00b6 Kompetenzen \u00b6 Versteht den grunds\u00e4tzlichen Verzeichnisaufbau von Linuxsystemen und die wichtigsten Begrifflichkeiten. Verwendet eine Shell um in Linux Basiskonfigurationen vorzunehmen. Handlungsziele \u00b6 1. Versteht den Unterschied zwischen Windows- und Linuxsystemen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Entstehung von Linux und die geschichtliche Entwicklung. Kennt die Hauptunterschiede von Linux gegen\u00fcber anderen Betriebssystemen. Kennt die wichtigsten Begrifflichkeiten rund um Linux. 2. Kann Basismanipulationen in einer Shell (bspw. Bash) vornehmen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kann in der Verzeichnisstruktur navigieren, Inhalte ausgeben und Merkmale anzeigen. Kann einen Editor bedienen und kennt die Grundlagen von vi . 3. Kann Basiskonfigurationen an einem Linuxsystems vornehmen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die M\u00f6glichkeiten einer sicheren Verbindung zu einem Linuxsystem. Kann Zertifikate dahingehend anwenden, dass eine sichere Verbindung zu einem Linuxsystem m\u00f6glich ist. Kann gem\u00e4ss Anleitungen Konfigurationen an einem Linuxsystem vornehmen, testen und dokumentieren.","title":"Linux Grundlagen / Shell"},{"location":"1-20/#linux-grundlagen-shell","text":"","title":"Linux Grundlagen / Shell"},{"location":"1-20/#kompetenzen","text":"Versteht den grunds\u00e4tzlichen Verzeichnisaufbau von Linuxsystemen und die wichtigsten Begrifflichkeiten. Verwendet eine Shell um in Linux Basiskonfigurationen vorzunehmen.","title":"Kompetenzen"},{"location":"1-20/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-30/","text":"Scripting Bash / PowerShell \u00b6 Kompetenzen \u00b6 Abl\u00e4ufe mit Scripts in der Systemadministration automatisieren. Handlungsziele \u00b6 1. Zu automatisierende Funktion oder zu automatisierenden Ablauf mit den dazugeh\u00f6rigen Benutzerinteraktionen als Ablaufstruktur (z.Bsp. Programmablaufplan) grafisch darstellen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt Beispiele von Automatisierungsaufgaben. Kennt Kriterien, die f\u00fcr die Beurteilung des Automatisierungspotentials von Bedeutung sind. Kennt grundlegende Kontrollstrukturen und deren Einsatz bei der Ablaufautomatisierung. Kennt das Vorgehen bei der Situationsanalyse und weiss, welchen Beitrag diese zur Definition eines klaren Auftrags liefert. Kennt das Vorgehen zur grafischen Darstellung von Abl\u00e4ufen. Kennt das Vorgehen zur Realisierung von Scripts in der Systemadministration. 2. Ablaufstruktur mit Hilfe einer Scriptsprache umsetzen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt grundlegende Funktionalit\u00e4ten der eingesetzten Scriptsprache. 3. Script in eine Systemumgebung integrieren und testen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt g\u00e4ngige Sicherheitsmassnahmen f\u00fcr den Einsatz von Scripts. Kennt Integrationsm\u00f6glichkeiten von Scripts im eingesetzten Betriebssystem. Kennt ein Testverfahren f\u00fcr Scripts.","title":"Scripting Bash / PowerShell"},{"location":"1-30/#scripting-bash-powershell","text":"","title":"Scripting Bash / PowerShell"},{"location":"1-30/#kompetenzen","text":"Abl\u00e4ufe mit Scripts in der Systemadministration automatisieren.","title":"Kompetenzen"},{"location":"1-30/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-40/","text":"Container Technologien \u00b6 Kompetenzen \u00b6 Stellt lokale Services mit Containern bereit und administriert diese. Handlungsziele \u00b6 1. Definiert die erforderliche Umgebung f\u00fcr die automatisierte Bereitstellung von Services. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Grundprinzipien der monolithischen und der Microservice-Architektur. Kennt die wesentlichen Vor- und Nachteile unterschiedlicher Architekturen und deren Nutzen auf Serviceebene aufzeigen (z.B. Microservice-Architektur). Kennt die Vorgehensweise, wie Services in Container verpackt werden. Kennt die Vorgehensweise, wie Services im Backend bereitgestellt und wie die Services im Frontend von Clients genutzt werden. Kennt die einer Containerumgebung zugrundeliegende Architektur (Daemon, Client/Server, Images, Container, Registry). Kennt die Abh\u00e4ngigkeiten von Services und deren Bereitstellung in einer lokalen Infrastruktur (Beispiele: persistente Datenspeicherung, Vernetzung und andere). 2. W\u00e4hlt eine geeignete Containerkomposition (Architektur) situationsbezogen aus. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt Architekturformen (z.B. Aufteilung der Dienste auf Container) und deren Aufbau, Konzept und Unterschiede f\u00fcr den Einsatz von Containerl\u00f6sungen. Kennt die Chancen und Risiken im Umgang mit Containerisierung bez\u00fcglich Entwicklung und Betrieb von Diensten und Applikationen. Kennt die Anforderungen von Netzwerk, Security etc. in Bezug auf Containerisierung. Kennt die Anwendungsm\u00f6glichkeiten von Containern, deren Kompositionen und deren Services. 3. W\u00e4hlt geeignete Containerdienstleister gem\u00e4ss Anforderungen aus. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die unterschiedlichen Orchestration Frameworks und Tools (z.B. Docker, Kubernetes) zum Betrieb von Containerplattformen. Kennt globale Anbieter von Containerrepositories und -plattformen, die Preisunterschiede und die providerspezifischen Vor- und Nachteile (z.B. Docker-Hub, Azure, AWS etc.). 4. Virtualisiert eine Applikation mit der gew\u00e4hlten Containerkomposition sowohl zu Entwicklungszwecken als auch f\u00fcr Auslieferung / Betrieb. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Einsatzm\u00f6glichkeiten und Vorteile einer containerbasierten Architektur oder Dienstes bez\u00fcglich der Bed\u00fcrfnisse der eigenen Unternehmung. Kennt Konfigurations- und Sicherheitskonzepte einer Container-Komposition. Kennt die Entwicklungsschritte zur Virtualisierung einer Applikation oder Dienstes mit Containern.","title":"Container Technologien"},{"location":"1-40/#container-technologien","text":"","title":"Container Technologien"},{"location":"1-40/#kompetenzen","text":"Stellt lokale Services mit Containern bereit und administriert diese.","title":"Kompetenzen"},{"location":"1-40/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-50/","text":"Cloud Technologien \u00b6 Kompetenzen \u00b6 Beurteilt die Eignung von Cloud Services hinsichtlich der betrieblichen Anforderung. Entwickelt ein technisches Konzept und realisiert die gew\u00e4hlte L\u00f6sung. Handlungsziele \u00b6 1. Beurteilt die Eignung von On-Premise und Cloudl\u00f6sungen abgestimmt auf die Zielsetzungen des Unternehmens und leitet draus eine Empfehlung f\u00fcr die Umsetzung ab. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Definition und die Vorteile von Cloud Computing (On-Demand Delivery, On-Demand Pricing, Dynamische Skalierung und die Globale Infrastruktur der Hyperscaler). Kennt die Cloud Service- (IaaS, PaaS, SaaS) und Betriebsmodelle (On-Premise, hybrid Cloud und Cloud-Native) und deren Unterschiede. Kennt Computer-Optionen und deren Unterschiede und Anwendungszwecke (virtuelle Maschinen, Container und Serverless). Kennt Cloud Services, um die drei Hauptdatentypen (Strukturierte, teilweise strukturierte und unstrukturierte Daten) zu speichern. Kennt die Verteilung der Verantwortlichkeiten f\u00fcr den sicheren Betrieb von Cloud Services und die grundlegenden Richtlinien und Datenschutzgarantien der grossen Cloud Provider. Kennt das grundlegende Netzwerkkonzept einer Cloud (Virtuelle Private Cloud, Anbindungsm\u00f6glichkeiten, Routing, Netzwerksicherheit) und dessen Funktionsweise. Kennt Infrastruktur, Best Practices und weitere Informationsquellen von Hyperscaler (z.B. Referenzarchitekturen und Security Dokumentationen). 2. Spezifiziert die Kosten einschliesslich Betriebsaufwand der vorgeschlagenen L\u00f6sung und bestimmt die zweckm\u00e4ssige Cloud Adoption. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt Kostenmodelle und das Vorgehen f\u00fcr einfache Kostenanalysen anhand von Beispielen. Kennt die Grunds\u00e4tze f\u00fcr Cloudmigrationen (z.B. Lift-and-Shift und Lift-and-Reshape). 3. Entwickelt unter Ber\u00fccksichtigung der technischen Rahmenbedingungen und Anforderungen des entsprechenden Anwendungsbereichs ein technisches Konzept f\u00fcr die Integration der ausgew\u00e4hlten Cloudlo\u0308sung. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Begriffe Verf\u00fcgbarkeit, Datensicherheit und \u2013resilienz und die Art und Weise, wie deren Anforderungen mit Hochverf\u00fcgbarkeit, Disaster Recovery und Backup adressiert werden. Kennt die Schritte f\u00fcr die Entwicklung einer einfachen Gesamtarchitektur und definiert die daf\u00fcr relevanten Cloud Services. Kennt ein Testkonzept zur \u00dcberpr\u00fcfung der Funktionalit\u00e4t, Performance und Sicherheit von Systemen und Diensten. 4. Installiert und konfiguriert die vordefinierten Services in der Cloud. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Implementationsm\u00f6glichkeiten der ausgew\u00e4hlten Dienste in der Cloud (gem\u00e4ss technischem Konzept).","title":"Cloud Technologien"},{"location":"1-50/#cloud-technologien","text":"","title":"Cloud Technologien"},{"location":"1-50/#kompetenzen","text":"Beurteilt die Eignung von Cloud Services hinsichtlich der betrieblichen Anforderung. Entwickelt ein technisches Konzept und realisiert die gew\u00e4hlte L\u00f6sung.","title":"Kompetenzen"},{"location":"1-50/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-60/","text":"Modellieren von Datenstrukturen & Daten auswerten \u00b6 Kompetenzen \u00b6 Analysiert Informationsbest\u00e4nde aus verschiedenen Quellen, charakterisiert Daten und ordnet sie ein. Erstellt durch die in der Analyse gewonnenen Anhaltspunkte ein konzeptionelles Datenmodell und \u00fcberf\u00fchrt dieses in ein logisches, relationales Datenmodell. Erstellt Datenabfragen auf ein relationales Datenmodell und wertet die Daten aus. Handlungsziele \u00b6 1. Sichtet Daten aus verschiedenen strukturierten und unstrukturierten Informationsbest\u00e4nden und ordnet sie ein. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt verschiedene Formen von Daten (numerische: Messdaten/Klassifikationen; verbale: Texte in schriftlicher oder gesprochener Form; nonverbale: Musik, Fotos, Videos, usw.) und wie sie auf einem Datentr\u00e4ger gespeichert werden. Kennt deren Auswertbarkeit auf einem Computersystem. Kennt Strukturmerkmale verschiedener Informationsquellen (Textdokumente, Datenbl\u00e4tter, Gesch\u00e4ftsgrafiken, Datenbanken, usw.) und die Konsequenzen, welche sich daraus f\u00fcr die elektronische Auswertung dieser Datenquellen ergeben. 2. Charakterisiert einen Informationsbestand f\u00fcr die Verarbeitung hinsichtlich Qualit\u00e4t, z.B. Vollst\u00e4ndigkeit, Eindeutigkeit, Widerspr\u00fcchlichkeit, Redundanz und bereinigt die Daten falls n\u00f6tig. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt Merkmale eines Datenbestandes bez\u00fcglich Eindeutigkeit und Vollst\u00e4ndigkeit (unterschiedliche Angaben zur gleichen Information, unterschiedlicher Informationsgehalt). Kennt verbreitete Datentypen zur Charakterisierung von Daten (ganze Zahl, rationale Zahlen, Zeit, Datum, Text, Boolean, usw.). Kennt die verschiedenen Skalentypen (nominal, ordinal und metrisch) und die sich daraus ergebenden Konsequenzen f\u00fcr die Auswertungsm\u00f6glichkeiten. 3. Erstellt ein konzeptionelles Datenmodell f\u00fcr die bereinigten Daten und definiert Entit\u00e4tstypen, Attribute und Beziehungen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die methodische Vorgehensweise bei der Entwicklung eines konzeptionellen Datenmodells (Entity Relationship Model, ERM), ausgehend von Datenstrukturen bzw. Anforderungen des Kunden (spezialisieren, generalisieren, Entit\u00e4tstypen identifizieren und definieren, Attribute definieren, Beziehungen beschreiben). Kennt Elemente in einem konzeptionellen Datenmodell (Entit\u00e4tstyp, Attribut, Assoziation, Kardinalit\u00e4t), deren Eigenschaften und deren Darstellung. Kennt die verschiedenen Kardinalit\u00e4ten von Assoziationen (1:1, 1:m, n:m) und kennt das Vorgehen, um den Beziehungstyp zwischen Datenstrukturen zu bestimmen. 4. \u00dcberf\u00fchrt das konzeptionelle Datenmodell in ein logisches, relationales Datenmodell durch Erg\u00e4nzen von Identifikations- und Fremdschl\u00fcsseln, Datentypen und allf\u00e4lliger Zwischentabellen. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Unterschiede zwischen dem konzeptionellen und dem logischen, relationalen Datenmodell (Relational Model, RM) und das Vorgehen zur \u00dcberf\u00fchrung vom konzeptionellen zum logischen, relationalen Datenmodell. Kennt zu erf\u00fcllende Merkmale von Identifikationsschl\u00fcsseln und die daraus entstehenden Verarbeitungsm\u00f6glichkeiten als Prim\u00e4r- und Fremdschl\u00fcssel. Kennt die Notwendigkeit von Zwischentabellen zur Abbildung von n:m-Kardinalit\u00e4ten zwischen Entit\u00e4tstypen. Kennt erweiterte Konstruktionselemente (z.B. Rekursive Assoziation) des logischen, relationalen Datenmodells. 5. Normalisiert das logische, relationale Datenmodell. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Schritte der Normalisierung von der 0. bis zur 3. Normalform. Kennt Gr\u00fcnde, weshalb eine vollst\u00e4ndige Normalisierung bis zur 3. Normalform zugunsten der besseren Performanz nicht immer angestrebt wird. 6. Bildet das konzeptionelle und logische, relationale Datenmodell in einer geeigneten Darstellung ab. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt eine Notatione zur Darstellung von konzeptionellen und logischen, relationalen Datenmodellen (Crow foot-, UML-Notation usw.). Kennt Tools, um konzeptionelle und logische, relationale Datenmodelle zu erstellen. 7. F\u00fchrt Datenabfragen auf ein relationales Modell durch und wertet die Daten aus \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die grundlegenden SQL-Befehle f\u00fcr Datenabfragen (DQL) Kennt die Techniken, um normalisierte Tabellen wieder miteinander zu verbinden Grobplanung Grobplanung \u00b6 Datenquellen, Motivation f\u00fcr Strukturierung von Daten (1 Lektionen) \u00b6 Wieso besteht das Bed\u00fcrfnis, Daten zu strukturieren (Ablage ohne Redundanzen, Einfachere Auswertung, Konsistenz) Begriffe (2 Lektionen) \u00b6 Begriffe definieren: Redundanz, Konsistenz, Tabelle, Prim\u00e4rschl\u00fcssel, Fremdschl\u00fcssel usw. Datenmodell erstellen (3 Lektionen) \u00b6 konzeptionelles Datenmodell relationales Datenmodell Darstellung, Notation Datenmodell optimieren (3 Lektionen) \u00b6 Normalisierung Daten abfragen und auswerten (3 Lektionen) \u00b6 SQL-Abfragen (DQL) Daten filtern (where) Tabellen verbinden (Join)","title":"Modellieren von Datenstrukturen & Daten auswerten"},{"location":"1-60/#modellieren-von-datenstrukturen-daten-auswerten","text":"","title":"Modellieren von Datenstrukturen &amp; Daten auswerten"},{"location":"1-60/#kompetenzen","text":"Analysiert Informationsbest\u00e4nde aus verschiedenen Quellen, charakterisiert Daten und ordnet sie ein. Erstellt durch die in der Analyse gewonnenen Anhaltspunkte ein konzeptionelles Datenmodell und \u00fcberf\u00fchrt dieses in ein logisches, relationales Datenmodell. Erstellt Datenabfragen auf ein relationales Datenmodell und wertet die Daten aus.","title":"Kompetenzen"},{"location":"1-60/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"1-60/#grobplanung","text":"","title":"Grobplanung"},{"location":"2-10/","text":"Objektorientierte Programmierung \u00b6 Kompetenzen \u00b6 Modelliert objektorientierte Applikationen und Schnittstellen im Umfang von 3-5 fachlichen Klassen. Implementiert, testet und dokumentiert die Anwendung/Schnittstelle anhand des erstellten Modells. Handlungsziele \u00b6 1. Leitet aufgrund der Vorgaben die erforderlichen Daten (Eingabe, Verarbeitung, Ausgabe und ihre Datentypen) ab. \u00b6 Handlungsnotwendige Kenntnisse \u00b6 Kennt die Unterscheidung der Datentypen (z. B primitive, komplexe). Kennt die relevanten Datentypen (z. B integer, boolean, array mit einer Dimension). Kennt die Funktionsweise einer Software nach dem EVA Prinzip. 2. Implementiert die Applikation mit Hilfe von Kontrollstrukturen und selbst erstellten Funktionen. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt den grundlegenden Aufbau einer Applikation resp. Programmes. Kennt die Verwendung von Kontrollstrukturen wie Iterationen (vor-/nachgepr\u00fcft), Selektion. Kennt Sinn und Zweck von Variablen und Konstanten sowie deren Unterschied. Kennt den G\u00fcltigkeitsbereich von Anweisungen und deren Zweck. Kennt die M\u00f6glichkeiten von Editoren sowie einer Entwicklungsumgebung, sowie den Umgang mit Fehler- und Warnmeldungen. Kennt den Aufbau von Funktionen (Name, Parameter, Datentypen, R\u00fcckgabetyp) und wie diese in einem Programm korrekt eingesetzt und aufgerufen werden. Kennt den Mehrwert der Auslagerung von Teilen von Code in Funktionen. 3. Ein objektorientiertes Design erstellen und mittels Unified Modeling Language darstellen. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt Architekturen um die Fachklassen zu einer lauff\u00e4higen Applikation zu erg\u00e4nzen. Kennt geeignete UML-Diagramme und welche Sachverhalte sich damit abbilden lassen. 4. Objektorientiertes Design implementieren. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt M\u00f6glichkeiten, wie eine Architektur mit einer objektorientierten Programmiersprache umgesetzt werden kann. Kennt die Vorteile eines iterativen Vorgehens f\u00fcr die Implementa-tion des Designs. Kennt die grundlegenden Vorteile von Frameworks und mit welchen Funktionen diese das objektorientierte Design unterst\u00fctzen. 5. Erf\u00fcllung der fachlichen Anforderung pr\u00fcfen. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt Vorgehensweisen, um auf Grund der Analysedokumente (Use Cases, Aktivit\u00e4tsdiagramme, Klassendiagramme) Testf\u00e4lle zu bestimmen und auszuarbeiten. Kennt die grundlegenden Schritte die bei einem Systemtest durchlaufen werden m\u00fcssen. 6. Applikations-Architektur nachvollziehbar dokumentieren. \u00b6 Kennt Kriterien f\u00fcr die Auswahl geeigneter UML-Diagramme f\u00fcr die nachvollziehbare Dokumentation einer Applikations-Architektur. 7. Identifiziert und definiert ausgehend vom Analysemodell, den nicht\u2010funktionalen Anforderungen und der gew\u00e4hlten Architektur die zu entwickelnden Komponenten und entwirft auf Basis dieser Vorgaben das Schichten\u2010Modell der Applikation. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Elemente eines Komponentendiagramms, welchen einen Beitrag zur Beschreibung des Schichten\u2010Modells einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines Komponentendiagramms und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. 8. Entwirft unter Ber\u00fccksichtigung des Analysemodells und der zu entwickelnden Komponenten ein fachliches Subsystem\u2010 und Komponentenmodell. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Elemente eines Komponentendiagramms, welchen einen Beitrag zur Beschreibung der Komponenten einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines Komponentendiagramms und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. 9. Entwirft unter Ber\u00fccksichtigung des Analysemodells die Klassenmodelle der zu entwickelnden Komponenten und setzt dabei Design Pattern, Best Practices etc. l\u00f6sungsorientiert ein. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Elemente eines Klassendiagramms, welchen einen Beitrag zur Beschreibung der Komponenten einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines Klassendiagramms und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. Kennt die Elemente eines Kompositionsstrukturdiagramms, welchen einen Beitrag zur Beschreibung einer Komponente einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines Kompositionsstrukturdiagramms und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. Kennt die g\u00e4ngigsten Design Patterns kann deren Funktionsweise anhand konkreter Anwendungsf\u00e4lle erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Design Patterns und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. 10. Entwirft unter Ber\u00fccksichtigung des Analysemodells die Zustandsmodelle, welche das Verhalten von einzelnen Objekten und Interaktionen innerhalb/zwischen den zu entwickelnden Komponenten definieren, und setzt dabei Design Pattern, Best Practices etc. l\u00f6sungsorientiert ein. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Elemente eines Zustandsdiagramms, welchen einen Beitrag zur Beschreibung von Zustandsmodellen einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines Zustandsdiagramms und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. 11. Entwickelt f\u00fcr die zu bauenden Komponenten geeignete ablauforientierte Unit Tests, welche automatisiert ausgef\u00fchrt werden k\u00f6nnen. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Elemente von automatisierten Unit Tests, welchen einen Beitrag zur \u00dcberpr\u00fcfbarkeit des entwickelten Programmcodes einer Applikation leisten, und kann diesen erl\u00e4utern. Kennt die Anforderungen an die Spezifikation der Elemente eines automatisierten Unit Tests und kann erl\u00e4utern, wie damit eine verbindliche Vereinbarung hinsichtlich der weiteren Entwicklung der Applikation sichergestellt wird. Formuliert Erwartungen, Grenzf\u00e4lle, Grenz\u00fcberschreitungen sowie die jeweils erwartete Reaktion auf diese Stimuli Kennt den grundlegenden Aufbau von Tests (AAA) und setzt diese in der Praxis um. Unterscheidet parametrische von spezifischen Tests und wendet diese bedarfsgerecht an. 12. Kennt die Prinzipien von \u00abClean Code\u00bb und wendet diese konsequent an. \u00b6 Handlungsnotwendige Kenntnisse: \u00b6 Kennt die Grundlagen von CleanCode Identifiziert Codesmells und kann diese refaktorisieren Grobplanung Grobplanung \u00b6 folgende Handlungsziele fehlen (aus Zeitgr\u00fcnden): 5 / 6 / 7 / 8 / 10 Entwicklungsumgebung / Allgemeine Programmiergrundlagen (4 Lektionen) \u00b6 Installation Entwicklungsumgebung Datentypen, Kontrollstrukturen Objektorientierte Grundlagen (8 Lektionen) \u00b6 Klassen Vererbung UML-Modelle (8 Lektionen) \u00b6 Objektdiagramm Klassendiagramm mit Aggregation, Kompositino Design Pattern Modelle implementieren (4 Lektionen) \u00b6 Umsetzung eines Klassendiagramms OO-Vertiefung / Polymorphie (4 Lektionen) \u00b6 Stereotypen Polymorphie Testing (8 Lektionen) \u00b6 Unittesting CleanCode (4 Lektionen) \u00b6 Was bedeutet CleanCode Codesmells und Refactoring","title":"Objektorientierte Programmierung (Blockwoche)"},{"location":"2-10/#objektorientierte-programmierung","text":"","title":"Objektorientierte Programmierung"},{"location":"2-10/#kompetenzen","text":"Modelliert objektorientierte Applikationen und Schnittstellen im Umfang von 3-5 fachlichen Klassen. Implementiert, testet und dokumentiert die Anwendung/Schnittstelle anhand des erstellten Modells.","title":"Kompetenzen"},{"location":"2-10/#handlungsziele","text":"","title":"Handlungsziele"},{"location":"2-10/#grobplanung","text":"folgende Handlungsziele fehlen (aus Zeitgr\u00fcnden): 5 / 6 / 7 / 8 / 10","title":"Grobplanung"},{"location":"3-10/","text":"","title":"Support"},{"location":"4-10/","text":"","title":"Frontend-Entwicklung"}]}